{"ast":null,"code":"import _classCallCheck from \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\src\\\\components\\\\tables\\\\BikeTable.js\";\nimport React, { Component } from 'react';\nimport { Table, TableHeader } from 'react-mdl';\nimport { graphql } from 'react-apollo';\nimport { getProjectsQuery } from '../../queries/queries'; //import Table from 'rc-table';\n\nimport styled from 'styled-components';\n/*\r\nconst columns =[\r\n    {title:'Project', dataIndex: 'projectname', width:100},\r\n    {title:'Distrbuted', dataIndex: 'bikenumber', width:100},\r\n    {title:'Season', dataIndex: 'distributedyear', width:100},\r\n    //{titel:'Action' ,dataIndex:'', render(){\r\n    //    return <button>Delete</button>\r\n  //  }}\r\n];\r\n\r\nconst BodyRow = styled.tr`\r\n\r\n    &:hover{\r\n        background: palevioletred;\r\n    }\r\n\r\n`;\r\n\r\nconst components = {\r\n    body: {\r\n        row: BodyRow,\r\n    },\r\n};\r\n\r\n*/\n\nvar BikeTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BikeTable, _Component);\n\n  function BikeTable() {\n    _classCallCheck(this, BikeTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BikeTable).apply(this, arguments));\n  }\n\n  _createClass(BikeTable, [{\n    key: \"displayProjects\",\n    value: function displayProjects() {\n      var data = this.props.data;\n\n      if (data.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"loading..\");\n      } else {\n        return data.projects.map(function (project) {\n          return React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, project.projectname);\n        });\n      }\n    }\n  }, {\n    key: \"displayBikeNumber\",\n    value: function displayBikeNumber() {\n      var data = this.props.data;\n\n      if (data.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"loading..\");\n      } else {\n        return data.projects.map(function (bike) {\n          return React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, bike.bikenumber);\n        });\n      }\n    }\n  }, {\n    key: \"displaySeason\",\n    value: function displaySeason() {\n      var data = this.props.data;\n\n      if (data.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"loading..\");\n      } else {\n        return data.projects.map(function (season) {\n          return React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, season.distributedyear);\n        });\n      }\n    }\n  }, {\n    key: \"displayDs\",\n    value: function displayDs() {\n      var data = this.props.data;\n\n      if (data.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"loading..\");\n      } else {\n        return data.projects.districtname.map(function (ds) {\n          return React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, ds.districtname);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Table, {\n        sortable: true,\n        shadow: 0,\n        rows: displayProjects(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(TableHeader, {\n        name: \"projectname\",\n        sortFn: function sortFn(a, b, isAsc) {\n          return (isAsc ? a : b).match(/\\((.*)\\)/)[1].localeCompare((isAsc ? b : a).match(/\\((.*)\\)/)[1]);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Project\"), React.createElement(TableHeader, {\n        name: \"bikenumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Number of Bikes\"), React.createElement(TableHeader, {\n        name: \"distributedyear\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Season\"));\n    }\n  }]);\n\n  return BikeTable;\n}(Component);\n\nexport default graphql(getProjectsQuery)(BikeTable);","map":{"version":3,"sources":["C:\\wamp\\www\\TestApp\\client\\src\\components\\tables\\BikeTable.js"],"names":["React","Component","Table","TableHeader","graphql","getProjectsQuery","styled","BikeTable","data","props","loading","projects","map","project","projectname","bike","bikenumber","season","distributedyear","districtname","ds","displayProjects","a","b","isAsc","match","localeCompare"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAkC,WAAlC;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,SAAQC,gBAAR,QAA+B,uBAA/B,C,CAGA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;IA8BMC,S;;;;;;;;;;;;;sCAEe;AACb,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;;AACA,UAAGA,IAAI,CAACE,OAAR,EAAgB;AACd,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD,OAFD,MAEO;AACL,eAAOF,IAAI,CAACG,QAAL,CAAcC,GAAd,CAAkB,UAAAC,OAAO,EAAI;AAClC,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKA,OAAO,CAACC,WAAb,CAAP;AACD,SAFM,CAAP;AAGD;AACF;;;wCAEkB;AACjB,UAAIN,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;;AACA,UAAGA,IAAI,CAACE,OAAR,EAAgB;AACd,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD,OAFD,MAEO;AACL,eAAOF,IAAI,CAACG,QAAL,CAAcC,GAAd,CAAkB,UAAAG,IAAI,EAAI;AAC/B,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKA,IAAI,CAACC,UAAV,CAAP;AACD,SAFM,CAAP;AAGD;AACF;;;oCAEc;AACb,UAAIR,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;;AACA,UAAGA,IAAI,CAACE,OAAR,EAAgB;AACd,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD,OAFD,MAEO;AACL,eAAOF,IAAI,CAACG,QAAL,CAAcC,GAAd,CAAkB,UAAAK,MAAM,EAAI;AACjC,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKA,MAAM,CAACC,eAAZ,CAAP;AACD,SAFM,CAAP;AAGD;AACF;;;gCAEU;AACT,UAAIV,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;;AACA,UAAGA,IAAI,CAACE,OAAR,EAAgB;AACd,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD,OAFD,MAEO;AACL,eAAOF,IAAI,CAACG,QAAL,CAAcQ,YAAd,CAA2BP,GAA3B,CAA+B,UAAAQ,EAAE,EAAI;AAC1C,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKA,EAAE,CAACD,YAAR,CAAP;AACD,SAFM,CAAP;AAGD;AACF;;;6BAGM;AAKL,aAGQ,oBAAC,KAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,MAAM,EAAE,CAFZ;AAGI,QAAA,IAAI,EAAGE,eAAe,EAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,WAAD;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,MAAM,EAAE,gBAACC,CAAD,EAAIC,CAAJ,EAAOC,KAAP;AAAA,iBAAiB,CAACA,KAAK,GAAGF,CAAH,GAAOC,CAAb,EAAgBE,KAAhB,CAAsB,UAAtB,EAAkC,CAAlC,EAAqCC,aAArC,CAAmD,CAACF,KAAK,GAAGD,CAAH,GAAOD,CAAb,EAAgBG,KAAhB,CAAsB,UAAtB,EAAkC,CAAlC,CAAnD,CAAjB;AAAA,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,EAUI,oBAAC,WAAD;AACI,QAAA,IAAI,EAAC,YADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVJ,EAcI,oBAAC,WAAD;AACI,QAAA,IAAI,EAAC,iBADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ,CAHR;AA0BH;;;;EA9EmBxB,S;;AAmFxB,eAAeG,OAAO,CAACC,gBAAD,CAAP,CAA0BE,SAA1B,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { Table, TableHeader} from 'react-mdl';\r\nimport {graphql} from 'react-apollo';\r\nimport {getProjectsQuery} from '../../queries/queries';\r\n\r\n\r\n//import Table from 'rc-table';\r\nimport styled from 'styled-components';\r\n\r\n/*\r\nconst columns =[\r\n    {title:'Project', dataIndex: 'projectname', width:100},\r\n    {title:'Distrbuted', dataIndex: 'bikenumber', width:100},\r\n    {title:'Season', dataIndex: 'distributedyear', width:100},\r\n    //{titel:'Action' ,dataIndex:'', render(){\r\n    //    return <button>Delete</button>\r\n  //  }}\r\n];\r\n\r\nconst BodyRow = styled.tr`\r\n\r\n    &:hover{\r\n        background: palevioletred;\r\n    }\r\n\r\n`;\r\n\r\nconst components = {\r\n    body: {\r\n        row: BodyRow,\r\n    },\r\n};\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\nclass BikeTable extends Component {\r\n\r\n    displayProjects(){\r\n        var data = this.props.data;\r\n        if(data.loading){\r\n          return(<div>loading..</div>);\r\n        } else {\r\n          return data.projects.map(project => {\r\n            return(<td>{project.projectname}</td>);\r\n          })\r\n        }\r\n      }\r\n      \r\n      displayBikeNumber(){\r\n        var data = this.props.data;\r\n        if(data.loading){\r\n          return(<div>loading..</div>);\r\n        } else {\r\n          return data.projects.map(bike => {\r\n            return(<td>{bike.bikenumber}</td>);\r\n          })\r\n        }\r\n      }\r\n\r\n      displaySeason(){\r\n        var data = this.props.data;\r\n        if(data.loading){\r\n          return(<div>loading..</div>);\r\n        } else {\r\n          return data.projects.map(season => {\r\n            return(<td>{season.distributedyear}</td>);\r\n          })\r\n        }\r\n      }\r\n\r\n      displayDs(){\r\n        var data = this.props.data;\r\n        if(data.loading){\r\n          return(<div>loading..</div>);\r\n        } else {\r\n          return data.projects.districtname.map(ds => {\r\n            return(<td>{ds.districtname}</td>);\r\n          })\r\n        }\r\n      }\r\n\r\n  \r\n    render() {    \r\n\r\n       \r\n    \r\n\r\n        return(\r\n                \r\n            \r\n                <Table \r\n                    sortable\r\n                    shadow={0}\r\n                    rows ={displayProjects()}\r\n                >\r\n                    <TableHeader\r\n                        name=\"projectname\"\r\n                        sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/\\((.*)\\)/)[1].localeCompare((isAsc ? b : a).match(/\\((.*)\\)/)[1])}\r\n                    >Project</TableHeader>  \r\n\r\n                    <TableHeader \r\n                        name=\"bikenumber\"\r\n                    >Number of Bikes</TableHeader>\r\n\r\n                    <TableHeader \r\n                        name=\"distributedyear\"\r\n                    >Season</TableHeader>\r\n                </Table>\r\n\r\n            \r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default graphql(getProjectsQuery)(BikeTable);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}