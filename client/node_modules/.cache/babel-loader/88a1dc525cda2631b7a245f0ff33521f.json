{"ast":null,"code":"import _classCallCheck from \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\src\\\\components\\\\tables\\\\BikeTable.js\";\nimport React, { Component } from 'react';\nimport { DataTable, TableHeader } from 'react-mdl';\nimport { graphql } from 'react-apollo';\nimport { getProjectsQuery } from '../queries/queries';\n\nvar BikeTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BikeTable, _Component);\n\n  function BikeTable() {\n    _classCallCheck(this, BikeTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BikeTable).apply(this, arguments));\n  }\n\n  _createClass(BikeTable, [{\n    key: \"displayProjects\",\n    value: function displayProjects() {\n      var data = this.props.data;\n\n      if (data.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, \"loading..\");\n      } else {\n        return data.projects.map(function (project) {\n          return React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 15\n            },\n            __self: this\n          }, project.projectname);\n        });\n      }\n    }\n  }, {\n    key: \"displayBikeNumber\",\n    value: function displayBikeNumber() {\n      var data = this.props.data;\n\n      if (data.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"loading..\");\n      } else {\n        return data.projects.map(function (bike) {\n          return React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, bike.bikenumber);\n        });\n      }\n    }\n  }, {\n    key: \"displaySeason\",\n    value: function displaySeason() {\n      var data = this.props.data;\n\n      if (data.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"loading..\");\n      } else {\n        return data.projects.map(function (season) {\n          return React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, season.distributedyear);\n        });\n      }\n    }\n  }, {\n    key: \"displayDs\",\n    value: function displayDs() {\n      var data = this.props.data;\n\n      if (data.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"loading..\");\n      } else {\n        return data.projects.districtname.map(function (ds) {\n          return React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, ds.districtname);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      var data = this.props.data;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        align: \"center\",\n        shadow: 0,\n        rows: [{\n          Distribution: 'INVC',\n          quantity: 10000,\n          seaons: 2.90\n        }, {\n          Distribution: 'NORAD',\n          quantity: 4000,\n          seaons: 1.25\n        }, {\n          Distribution: 'IRISH AID',\n          quantity: 2400,\n          seaons: 2.35\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(TableHeader, {\n        name: \"Distribution\",\n        tooltip: \"Project\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Total Distribution\"), React.createElement(TableHeader, {\n        numeric: true,\n        name: \"quantity\",\n        tooltip: \"Number of Bikes Distributed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Quantity\"), React.createElement(TableHeader, {\n        numeric: true,\n        name: \"price\",\n        tooltip: \"Number of Years Active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Seasons Active\")));\n    }\n  }]);\n\n  return BikeTable;\n}(Component);\n\nexport default graphql(getProjectsQuery)(BikeTable);\n;","map":{"version":3,"sources":["C:\\wamp\\www\\TestApp\\client\\src\\components\\tables\\BikeTable.js"],"names":["React","Component","DataTable","TableHeader","graphql","getProjectsQuery","BikeTable","data","props","loading","projects","map","project","projectname","bike","bikenumber","season","distributedyear","districtname","ds","console","log","Distribution","quantity","seaons"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { DataTable, TableHeader} from 'react-mdl';\r\nimport{ graphql} from 'react-apollo';\r\nimport {getProjectsQuery} from '../queries/queries';\r\n\r\n\r\nclass BikeTable extends Component {\r\n\r\n    displayProjects(){\r\n        var data = this.props.data;\r\n        if(data.loading){\r\n          return(<div>loading..</div>);\r\n        } else {\r\n          return data.projects.map(project => {\r\n            return(<td>{project.projectname}</td>);\r\n          })\r\n        }\r\n      }\r\n      \r\n      displayBikeNumber(){\r\n        var data = this.props.data;\r\n        if(data.loading){\r\n          return(<div>loading..</div>);\r\n        } else {\r\n          return data.projects.map(bike => {\r\n            return(<td>{bike.bikenumber}</td>);\r\n          })\r\n        }\r\n      }\r\n\r\n      displaySeason(){\r\n        var data = this.props.data;\r\n        if(data.loading){\r\n          return(<div>loading..</div>);\r\n        } else {\r\n          return data.projects.map(season => {\r\n            return(<td>{season.distributedyear}</td>);\r\n          })\r\n        }\r\n      }\r\n\r\n      displayDs(){\r\n        var data = this.props.data;\r\n        if(data.loading){\r\n          return(<div>loading..</div>);\r\n        } else {\r\n          return data.projects.districtname.map(ds => {\r\n            return(<td>{ds.districtname}</td>);\r\n          })\r\n        }\r\n      }\r\n\r\n    render() {\r\n\r\n        console.log(this.props);\r\n\r\n        var data = this.props.data;\r\n\r\n        return(\r\n                <div>\r\n                    <DataTable align=\"center\"\r\n                        shadow={0}\r\n                        rows={[\r\n                         {Distribution: 'INVC', quantity: 10000, seaons: 2.90}, \r\n                         {Distribution: 'NORAD', quantity: 4000, seaons: 1.25},\r\n                         {Distribution: 'IRISH AID', quantity: 2400, seaons: 2.35}\r\n                            ]}\r\n                        >\r\n                            <TableHeader name=\"Distribution\" tooltip=\"Project\">Total Distribution</TableHeader>\r\n                            <TableHeader numeric name=\"quantity\" tooltip=\"Number of Bikes Distributed\">Quantity</TableHeader>\r\n                            <TableHeader numeric name=\"price\" tooltip=\"Number of Years Active\">Seasons Active</TableHeader>\r\n                            \r\n                        </DataTable>\r\n\r\n                </div>\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default graphql(getProjectsQuery)(BikeTable);;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n      \r\n      \r\n  \r\n\r\n"]},"metadata":{},"sourceType":"module"}