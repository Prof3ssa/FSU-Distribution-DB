{"ast":null,"code":"import _classCallCheck from \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\wamp\\\\www\\\\TestApp\\\\client\\\\src\\\\components\\\\tables\\\\forms\\\\AddBikes.js\";\nimport React, { Component } from 'react';\nimport { graphql, compose } from 'react-apollo';\nimport { getDistrictsQuery, addProjectMutation, getProjectsQuery } from '../../../queries/queries'; //add validation for adding data\n//add validation for existing data\n\nvar AddBikes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddBikes, _Component);\n\n  function AddBikes(props) {\n    var _this;\n\n    _classCallCheck(this, AddBikes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddBikes).call(this, props));\n    _this.state = {\n      projectname: '',\n      bikenumber: null,\n      distributedyear: null,\n      districtid: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddBikes, [{\n    key: \"onClickProject\",\n    value: function onClickProject() {\n      alert('Project Successfully Added');\n    }\n  }, {\n    key: \"displayDistricts\",\n    value: function displayDistricts() {\n      var data = this.props.getDistrictsQuery;\n      console.log(data);\n\n      if (data.loading) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"Loading..\");\n      } else {\n        return data.districts.map(function (district) {\n          return React.createElement(\"option\", {\n            key: district.id,\n            value: project.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, \" \", district.districtname);\n        });\n      }\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm(e) {\n      e.preventDefault(); //console.log(this.state);\n\n      this.props.addProjectMutation({\n        variables: {\n          projectname: this.state.projectname,\n          bikenumber: Number.parseInt(this.state.bikenumber),\n          distributedyear: Number.parseInt(this.state.distributedyear),\n          districtid: this.state.districtid\n        },\n        refetchQueries: [{\n          query: getProjectsQuery\n        }]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"form-style-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.submitForm.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Project Name\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            projectname: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        placeholder: \"Number of Bicycles\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            bikenumber: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Season\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            distributedyear: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.setState({\n            districtid: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Select IPC..\"), this.displayDistricts()), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Add\",\n        onClick: this.onClickProject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"reset\",\n        value: \"Reset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddBikes;\n}(Component);\n\nexport default compose(graphql(getDistrictsQuery, {\n  name: \"getDistrictsQuery\"\n}), graphql(addProjectMutation, {\n  name: \"addProjectMutation\"\n}))(AddBikes);","map":{"version":3,"sources":["C:\\wamp\\www\\TestApp\\client\\src\\components\\tables\\forms\\AddBikes.js"],"names":["React","Component","graphql","compose","getDistrictsQuery","addProjectMutation","getProjectsQuery","AddBikes","props","state","projectname","bikenumber","distributedyear","districtid","alert","data","console","log","loading","districts","map","district","id","project","districtname","e","preventDefault","variables","Number","parseInt","refetchQueries","query","submitForm","bind","setState","target","value","displayDistricts","onClickProject","name"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {graphql, compose} from 'react-apollo';\r\nimport {getDistrictsQuery, addProjectMutation, getProjectsQuery} from '../../../queries/queries';\r\n\r\n\r\n//add validation for adding data\r\n//add validation for existing data\r\n\r\n\r\n\r\nclass AddBikes extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            projectname: '',\r\n            bikenumber: null,\r\n            distributedyear: null,\r\n            districtid: ''\r\n        };\r\n    }\r\n\r\n\r\n\r\n    onClickProject(){\r\n        alert('Project Successfully Added');\r\n    }\r\n\r\n   displayDistricts(){\r\n       var data = this.props.getDistrictsQuery;\r\n       console.log(data);\r\n       if(data.loading){\r\n           return (<option>Loading..</option>);\r\n       } else {\r\n           return data.districts.map(district => {\r\n               return(<option key = {district.id} value={project.id}> {district.districtname}</option>);\r\n           });\r\n       }\r\n   } \r\n   \r\n   submitForm(e){\r\n        \r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n    this.props.addProjectMutation({\r\n        variables:{\r\n            projectname: this.state.projectname,\r\n            bikenumber: Number.parseInt(this.state.bikenumber),\r\n            distributedyear: Number.parseInt(this.state.distributedyear),\r\n            districtid: this.state.districtid\r\n        },\r\n        refetchQueries: [{query: getProjectsQuery}]\r\n    });\r\n}\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"form-style-5\">\r\n            \r\n            <form onSubmit={this.submitForm.bind(this)}>\r\n                \r\n                <input type=\"text\" placeholder=\"Project Name\"  onChange={(e)=> this.setState({projectname: e.target.value})}/>\r\n            \r\n                <input type=\"number\" placeholder=\"Number of Bicycles\"  onChange={(e)=> this.setState({bikenumber: e.target.value})}/>\r\n             \r\n                <input type=\"text\" placeholder=\"Season\"  onChange={(e)=> this.setState({distributedyear: e.target.value})}/>\r\n\r\n                <select  onChange={(e)=> this.setState({districtid: e.target.value})}>\r\n                    <option>Select IPC..</option>\r\n                    {this.displayDistricts()}\r\n                </select>\r\n\r\n                <input type=\"submit\" value=\"Add\" onClick={this.onClickProject}/>\r\n                <input type=\"reset\" value=\"Reset\"/>\r\n            </form>\r\n\r\n            \r\n             \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    graphql(getDistrictsQuery,{name: \"getDistrictsQuery\"}),\r\n    graphql(addProjectMutation,{name:\"addProjectMutation\"}))\r\n    (AddBikes);"]},"metadata":{},"sourceType":"module"}